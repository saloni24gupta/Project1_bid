step 1 Enable Apacheâ€™s SSL Module
a2enmod ssl
sudo systemctl restart apache2

step 2 Generate a Self-Signed SSL Certificate
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
  -keyout /etc/ssl/private/bidhom.key \
  -out /etc/ssl/certs/bidhom.crt

step 3 Configure Apache to Listen on HTTPS
vim /etc/apache2/ports.conf
Listen 443
<IfModule ssl_module>
  Listen 443
</IfModule>


step 4 Create a New SSL VirtualHost
Copy your existing config to HTTPS and modify it:


sudo cp /etc/apache2/sites-available/bidhom.conf \
        /etc/apache2/sites-available/bidhom-ssl.conf

vim /etc/apache2/sites-available/bidhom-ssl.conf


<VirtualHost *:443>
  ServerName localhost
  DocumentRoot /var/www/Bidhom

  <Directory /var/www/Bidhom>
    Options Indexes FollowSymLinks
    AllowOverride All
    Require all granted
  </Directory>

  SSLEngine on
  SSLCertificateFile    /etc/ssl/certs/bidhom.crt
  SSLCertificateKeyFile /etc/ssl/private/bidhom.key

  ProxyPassMatch ^/(.*\.php(/.*)?)$ fcgi://127.0.0.1:9000/var/www/Bidhom/$1
</VirtualHost>


to protect website
apt install apache2-utils
 Step 2: Create a password file
sudo htpasswd -c /etc/apache2/.htpasswd saloni
///////////////////
-c creates the file; omit it when adding more users:
sudo htpasswd /etc/apache2/.htpasswd bob
//////////////////////////////////////////
Step 3: Configure directory protection
Add these directives to your VirtualHost (/etc/apache2/sites-available/bidhom.conf) and bidhom-ssl.conf or a .htaccess in the folder you wish to protect:
<Directory "/var/www/Bidhom">
    AuthType Basic
    AuthName "Restricted Area"
    AuthUserFile /etc/apache2/.htpasswd
    Require valid-user
</Directory>


a2enmod auth_basic
sudo systemctl reload apache2 
apache2ctl configtest
